# Install and load shiny package
if(!"shiny" %in% installed.packages()[, "Package"]){
      install.packages("shiny")
}
if(is.null(sessionInfo()$otherPkgs$shiny)){
     library(shiny)
}

# Set of ask if default is TRUE (some imputation packages change the value)
if(getOption("device.ask.default")) options(device.ask.default = F)


colimp <- "cornflowerblue"

# shiny app
impute <- shinyApp(
  ui = (fluidPage(
    
    sidebarLayout(
      sidebarPanel(
        
        p("Missing mechanisms and imputation.",
          "1 predictor (X) and 1 Outcome (Y)."),
        selectInput("prop",
                    "Proportion missing",
                    c("5%" = 5, "10%" = 10, "20%" = 20, "40%" = 40)),
        selectInput("mech",
                    "Missing mechanism",
                    c("MCAR (random)" = 1, 
                      "MAR (depends on X)" = 2,
                      "MNAR (depends on Y)" = 3)),
        selectInput("imp",
                    "Imputation meachnisem",
                    c("No (available case)" = 1, 
                    "Mean imputation" = 2,
                    "Regression imputation" = 3)),
        hr(),
        actionButton("go", "run", icon("arrow-alt-circle-right")),width=2,
      ),           
      mainPanel(
        plotOutput("mainPlot"),
      )
    )
  )),
  
  server <- (function(input, output, session) {
    
    newPlot <- function(){
      n <- 100
      d <- data.frame(X=runif(n)+rnorm(n))
      d$Y <- runif(n)*3 + d$X 
      Nmis <- as.numeric(input$prop)
      dm <- d
      if(input$mech == "1") dm$Y[sample(1:n, Nmis)] <- NA
      if(input$mech == "2") dm$Y[sample(1:n, Nmis, prob=d$X-min(d$X))] <- NA       
      if(input$mech == "3") dm$Y[sample(1:n, Nmis, prob=d$Y-min(d$Y))] <- NA
      
      di <- dm
      if(input$imp == "2") di$Y[is.na(di$Y)] <- mean(di$Y, na.rm=T)
      if(input$imp == "3"){
          implm <- lm(Y ~ X, data=di)
          summary(implm)
          pred <- predict(implm, di)
          di$Y[is.na(di$Y)] <- pred[is.na(di$Y)]
      }
                  
      par(mar=c(4,4,0,0)+0.3)
      layout(matrix(c(1,1,2,2,1,1,3,3), nrow=2, byrow=T))
      plot(d$X, d$Y, col="red", cex=4, lwd=2, xlab="X", ylab="Y")
      points(dm$X, dm$Y, cex=4, lwd=2)
      abline(lm(Y~X, data=d), col="black", lty=1, lwd=4)
      abline(lm(Y~X, data=di), col=colimp, lty=2, lwd=5)
      if(input$imp %in% c("2","3")) points(di$X[is.na(dm$Y)], 
                                           di$Y[is.na(dm$Y)], cex=4, lwd=4, col=colimp)
      plot(density(di$Y[!is.na(di$Y)], bw=0.2), col=colimp, lwd=3, main="",
          xlab="")
      mtext("Distribution of Y (black full, blue imputed)", side=1, line=1, cex=1.5)
      lines(density(d$Y, bw=0.2), col="black", lwd=3)   
      
      plot(NA,NA,xlim=0:1,ylim=0:1, xaxt="n",yaxt="n")
      mtext(c("Full","Imputed"),
            line=-4, cex=2.5, at=c(0.5, 0.8), col=c("black",colimp))      
      mtext(c("Mean Y", round(mean(d$Y, na.rm=T),2), round(mean(di$Y, na.rm=T),2)),
            line=-8, cex=2.5, at=c(0.2, 0.5, 0.8), col=c("black","black",colimp))
      mtext(c("SD Y", round(sd(d$Y, na.rm=T),2), round(sd(di$Y, na.rm=T),2)),
            line=-13, cex=2.5, at=c(0.2, 0.5, 0.8), col=c("black","black",colimp)) 
      mtext(c("Coef Y~X", round(coef(lm(Y~X, data=d))[2],2),
              round(coef(lm(Y~X, data=di))[2],2)),
           line=-18, cex=2.5, at=c(0.2, 0.5, 0.8), col=c("black","black",colimp))           
      mtext(c("95% CI Y~X", round(confint(lm(Y~X, data=d))[2,],2),
               round(confint(lm(Y~X, data=di))[2,],2)),
            line=-24, cex=2, at=c(0.16, 0.43,0.57, 0.73, 0.87), 
            col=c("black","black","black",colimp,colimp))                          
    }


    observeEvent(input$go,{
          output$mainPlot <- renderPlot({
             newPlot()
          }, height = 700)
    })

  })
  
)


runApp(impute, launch.browser=T)
